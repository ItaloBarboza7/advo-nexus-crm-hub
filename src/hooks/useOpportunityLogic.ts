
import { Lead } from "@/types/lead";

export const useOpportunityLogic = (
  hasLeadPassedThroughStatus: (leadId: string, statuses: string[]) => boolean
) => {
  const isOpportunityLead = (lead: Lead): boolean => {
    console.log(`üîç [useOpportunityLogic] Verificando se ${lead.name} (${lead.status}) √© oportunidade`);
    
    // NOVA REGRA: Oportunidades s√£o leads que:
    // 1. N√ÉO est√£o em "Novo" (independente do hist√≥rico)
    // 2. Est√£o atualmente em "Proposta" ou "Reuni√£o" OU passaram por eles (hist√≥rico)
    
    // PRIMEIRO: Excluir completamente leads com status "Novo"
    if (lead.status === "Novo") {
      console.log(`‚ùå [useOpportunityLogic] Lead ${lead.name} est√° em Novo - SEMPRE EXCLU√çDO`);
      return false;
    }
    
    // SEGUNDO: Se est√° em Proposta ou Reuni√£o atualmente, incluir automaticamente
    if (lead.status === "Proposta" || lead.status === "Reuni√£o") {
      console.log(`‚úÖ [useOpportunityLogic] Lead ${lead.name} est√° atualmente em ${lead.status} - INCLU√çDO`);
      return true;
    }
    
    // TERCEIRO: Verificar se passou por Proposta/Reuni√£o no hist√≥rico (incluindo finalizados)
    const hasPassedThroughTargetStatuses = hasLeadPassedThroughStatus(lead.id, ["Proposta", "Reuni√£o"]);
    console.log(`üìä [useOpportunityLogic] Lead ${lead.name} (${lead.status}) passou por Proposta/Reuni√£o: ${hasPassedThroughTargetStatuses}`);
    
    if (hasPassedThroughTargetStatuses) {
      console.log(`‚úÖ [useOpportunityLogic] Lead ${lead.name} passou por Proposta/Reuni√£o - INCLU√çDO mesmo estando em ${lead.status}`);
      return true;
    }
    
    console.log(`‚ùå [useOpportunityLogic] Lead ${lead.name} n√£o passou por Proposta/Reuni√£o - EXCLU√çDO`);
    return false;
  };

  return { isOpportunityLead };
};
